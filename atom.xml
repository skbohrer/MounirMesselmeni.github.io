<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Awesome notes]]></title>
  <link href="http://MounirMesselmeni.github.io/atom.xml" rel="self"/>
  <link href="http://MounirMesselmeni.github.io/"/>
  <updated>2013-11-25T17:10:22+01:00</updated>
  <id>http://MounirMesselmeni.github.io/</id>
  <author>
    <name><![CDATA[Mounir Messelmeni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Django grouped select field for ModelChoiceField or ModelMultipleChoiceField]]></title>
    <link href="http://MounirMesselmeni.github.io/2013/11/25/django-grouped-select-field/"/>
    <updated>2013-11-25T11:08:00+01:00</updated>
    <id>http://MounirMesselmeni.github.io/2013/11/25/django-grouped-select-field</id>
    <content type="html"><![CDATA[<p>Django forms&rsquo;s builtin fields like ChoiceField, ModelChoiceField use by default <code>forms.Select</code> widget, but what we do if we need a Select with grouped options.</p>

<p>I found this awesome <a href="https://djangosnippets.org/snippets/1968/">snippets</a> that&rsquo;s helped me to achieve this, just in my case I needed to add a line of code to show only options with parent.</p>

<!-- more -->


<h2>Example</h2>

<p>Here&rsquo;s a model example:</p>

<figure class='code'><figcaption><span>models.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Category</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parent</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s">&#39;self&#39;</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">u&#39;{0}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>I created a form that use this model:</p>

<figure class='code'><figcaption><span>forms.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">ExampleForm</span><span class="p">(</span><span class="n">forms</span><span class="o">.</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">category</span> <span class="o">=</span> <span class="n">GroupedModelChoiceField</span><span class="p">(</span>
</span><span class='line'>        <span class="n">label</span><span class="o">=</span><span class="n">_</span><span class="p">(</span><span class="s">&#39;Category&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="n">group_by_field</span><span class="o">=</span><span class="s">&#39;parent&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">queryset</span><span class="o">=</span><span class="n">Category</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">(),</span>
</span><span class='line'>    <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The snippet show categories with None label, I don&rsquo;t need to make user able to select Categories, only childs can be selected. So, I just edited the line 50 of the snippet to remove group categories.</p>

<figure class='code'><figcaption><span>fields.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">itertools</span> <span class="kn">import</span> <span class="n">groupby</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.forms.models</span> <span class="kn">import</span> <span class="n">ModelChoiceIterator</span><span class="p">,</span> <span class="n">ModelChoiceField</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">GroupedModelChoiceField</span><span class="p">(</span><span class="n">ModelChoiceField</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">group_by_field</span><span class="p">,</span> <span class="n">group_label</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        group_by_field is the name of a field on the model</span>
</span><span class='line'><span class="sd">        group_label is a function to return a label for each choice group</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="nb">super</span><span class="p">(</span><span class="n">GroupedModelChoiceField</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">group_by_field</span> <span class="o">=</span> <span class="n">group_by_field</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">group_label</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">group_label</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">group</span><span class="p">:</span> <span class="n">group</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">group_label</span> <span class="o">=</span> <span class="n">group_label</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">_get_choices</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        Exactly as per ModelChoiceField except returns new iterator class</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;_choices&#39;</span><span class="p">):</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_choices</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">GroupedModelChoiceIterator</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'>    <span class="n">choices</span> <span class="o">=</span> <span class="nb">property</span><span class="p">(</span><span class="n">_get_choices</span><span class="p">,</span> <span class="n">ModelChoiceField</span><span class="o">.</span><span class="n">_set_choices</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">GroupedModelChoiceIterator</span><span class="p">(</span><span class="n">ModelChoiceIterator</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">empty_label</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="k">yield</span> <span class="p">(</span><span class="s">u&quot;&quot;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">empty_label</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">cache_choices</span><span class="p">:</span>
</span><span class='line'>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">choice_cache</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>                <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">choice_cache</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>                    <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">group_label</span><span class="p">(</span><span class="n">group</span><span class="p">),</span> <span class="p">[</span>
</span><span class='line'>                     <span class="bp">self</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="k">for</span> <span class="n">ch</span> <span class="ow">in</span> <span class="n">choices</span><span class="p">])</span>
</span><span class='line'>                    <span class="k">for</span> <span class="n">group</span><span class="p">,</span> <span class="n">choices</span> <span class="ow">in</span> <span class="n">groupby</span><span class="p">(</span>
</span><span class='line'>                        <span class="bp">self</span><span class="o">.</span><span class="n">queryset</span><span class="o">.</span><span class="n">all</span><span class="p">(),</span>
</span><span class='line'>                        <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">group_by_field</span><span class="p">))</span>
</span><span class='line'>                <span class="p">]</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">choice</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">choice_cache</span><span class="p">:</span>
</span><span class='line'>                <span class="k">yield</span> <span class="n">choice</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">group</span><span class="p">,</span> <span class="n">choices</span> <span class="ow">in</span> <span class="n">groupby</span><span class="p">(</span>
</span><span class='line'>                    <span class="bp">self</span><span class="o">.</span><span class="n">queryset</span><span class="o">.</span><span class="n">all</span><span class="p">(),</span>
</span><span class='line'>                    <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="nb">getattr</span><span class="p">(</span>
</span><span class='line'>                        <span class="n">row</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">group_by_field</span><span class="p">)):</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">group</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span> <span class="c">#Line added</span>
</span><span class='line'>                    <span class="k">yield</span> <span class="p">(</span>
</span><span class='line'>                        <span class="bp">self</span><span class="o">.</span><span class="n">field</span><span class="o">.</span><span class="n">group_label</span><span class="p">(</span><span class="n">group</span><span class="p">),</span>
</span><span class='line'>                        <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="k">for</span> <span class="n">ch</span> <span class="ow">in</span> <span class="n">choices</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>Okay, now this custom field work, but what if I need a grouped select multiple with <code>ModelMultipleChoiceField</code> ?</p>

<p>We can just add a new field like <code>GroupedModelChoiceField</code> that inherits from <code>ModelMultipleChoiceField</code></p>

<figure class='code'><figcaption><span>fields.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.forms.models</span> <span class="kn">import</span> <span class="n">ModelMultipleChoiceField</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">GroupedMultipleModelChoiceField</span><span class="p">(</span><span class="n">ModelMultipleChoiceField</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">group_by_field</span><span class="p">,</span> <span class="n">group_label</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        group_by_field is the name of a field on the model</span>
</span><span class='line'><span class="sd">        group_label is a function to return a label for each choice group</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="nb">super</span><span class="p">(</span><span class="n">GroupedMultipleModelChoiceField</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">group_by_field</span> <span class="o">=</span> <span class="n">group_by_field</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">group_label</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">group_label</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">group</span><span class="p">:</span> <span class="n">group</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">group_label</span> <span class="o">=</span> <span class="n">group_label</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">_get_choices</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">        Exactly as per ModelChoiceField except returns new iterator class</span>
</span><span class='line'><span class="sd">        &quot;&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;_choices&#39;</span><span class="p">):</span>
</span><span class='line'>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_choices</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">GroupedModelChoiceIterator</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class='line'>    <span class="n">choices</span> <span class="o">=</span> <span class="nb">property</span><span class="p">(</span><span class="n">_get_choices</span><span class="p">,</span> <span class="n">ModelMultipleChoiceField</span><span class="o">.</span><span class="n">_set_choices</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate Django ManyToMany field to ManyToMany through with South]]></title>
    <link href="http://MounirMesselmeni.github.io/2013/07/28/migrate-django-manytomany-field-to-manytomany-through-with-south/"/>
    <updated>2013-07-28T02:30:00+01:00</updated>
    <id>http://MounirMesselmeni.github.io/2013/07/28/migrate-django-manytomany-field-to-manytomany-through-with-south</id>
    <content type="html"><![CDATA[<p>When working in a project already in production, you could encounter this case</p>

<p>You have a model that contains a <code>ManyToMany</code> field without through model, Django in this case take care itself for the join table, it create a join table that contains three columns: ID, pk of model1 and pk of model2 with a unique together constraint. At a specific time you want to add new column to the join table. Alright, with <a href="http://south.readthedocs.org/en/latest/">South</a> installed you can do it easly but South doesn&rsquo;t import your old data it&rsquo;s just delete old table. How to import data from old schema to the new one?</p>

<!-- more -->


<p>Let&rsquo;s make a concret example to be able to understand this case briefly.</p>

<ul>
<li>Create a Django project: <code>django-admin.py startproject migration_tutorial</code></li>
<li>Go into project: <code>cd migration_tutorial</code></li>
<li>Create a Django app named studies: <code>python manage.py startapp studies</code></li>
<li>In <code>migration_tutorial/migration_tutorial/settings.py</code> change database config to sqlite and add studies to <code>INSTALLED_APPS</code></li>
<li>We add also South to our <code>INSTALLED_APPS</code></li>
</ul>


<p>You should read <a href="http://south.readthedocs.org/en/latest/">South</a> documentation if you are not familiar with.</p>

<p>Here&rsquo;s our changes in <code>settings.py</code>:</p>

<figure class='code'><figcaption><span>settings.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;default&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;ENGINE&#39;</span><span class="p">:</span> <span class="s">&#39;django.db.backends.postgresql_psycopg2&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;NAME&#39;</span><span class="p">:</span> <span class="s">&#39;migration_tutorial&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;USER&#39;</span><span class="p">:</span> <span class="s">&#39;postgres&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;PASSWORD&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;HOST&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;PORT&#39;</span><span class="p">:</span> <span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.auth&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.contenttypes&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.sessions&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.sites&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.messages&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.staticfiles&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&#39;django.contrib.admin&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>    <span class="s">&#39;south&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>    <span class="s">&#39;studies&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Let&rsquo;s create our model</h2>

<p>We are going to create a simple model for Professor, Student and Course application.</p>

<ul>
<li>A Professor teach many Students</li>
<li>A Student is taught by many Professors</li>
</ul>


<p>So we have a ManyToMany relation between Students and Professors. Here&rsquo;s our Django model under the studies app</p>

<figure class='code'><figcaption><span>models.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Professor</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">first_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">last_name</span>  <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">u&quot;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">last_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">first_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">last_name</span>  <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">professors</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ManyToManyField</span><span class="p">(</span><span class="n">Professor</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">u&quot;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">last_name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Run the project</h2>

<p>Alright, let&rsquo;s run our project:</p>

<ul>
<li>Init South Migration: <code>python manage.py schemamigration studies --init</code></li>
<li>Sync Database: <code>python manage.py syncdb --noinput</code></li>
<li>Migrate our app: <code>python manage.py migrate</code>, in this way South take care of schema creation</li>
</ul>


<p>Now, we are going to insert some data using shell:</p>

<p>Enter in shell mode: <code>python manage.py shell</code></p>

<figure class='code'><figcaption><span>python interactive shell </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">studies.models</span> <span class="kn">import</span> <span class="n">Professor</span><span class="p">,</span> <span class="n">Student</span>
</span><span class='line'><span class="n">professor1</span> <span class="o">=</span> <span class="n">Professor</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Joshua&#39;</span><span class="p">,</span> <span class="n">last_name</span><span class="o">=</span><span class="s">&#39;Smith&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">professor1</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'><span class="n">professor2</span> <span class="o">=</span> <span class="n">Professor</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Ethan&#39;</span><span class="p">,</span> <span class="n">last_name</span><span class="o">=</span><span class="s">&#39;Brown&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">professor2</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'><span class="n">student1</span> <span class="o">=</span> <span class="n">Student</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Justin&#39;</span><span class="p">,</span> <span class="n">last_name</span><span class="o">=</span><span class="s">&#39;Martin&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'><span class="n">student2</span> <span class="o">=</span> <span class="n">Student</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Tom&#39;</span><span class="p">,</span> <span class="n">last_name</span><span class="o">=</span><span class="s">&#39;Taylor&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">student2</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Let&#39;s add professor 1 to Student one</span>
</span><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">professor1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Check if data is persisted to database</span>
</span><span class='line'><span class="n">student1</span> <span class="o">=</span> <span class="n">Student</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Justin&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Let&#39;s add professor2 to student1 too</span>
</span><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">professor2</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Professor2 to student2</span>
</span><span class='line'><span class="n">student2</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">professor2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that when working with Django ManyToManyField without through, Django provide some useful method like add method we just use.</p>

<h2>Our migration case</h2>

<p>Now think if we had this model in production, we have many Students and Professors relation stored in our database. At a specific time we want to add course name taught by Professor to a student, this is a join table column. We are going no to use a through model to add this attribute.</p>

<p>Here&rsquo;s our updated models:</p>

<figure class='code'><figcaption><span>models.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Professor</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">first_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">last_name</span>  <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">u&quot;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">last_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Student</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">first_name</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">last_name</span>  <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">professors</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ManyToManyField</span><span class="p">(</span><span class="n">Professor</span><span class="p">,</span> <span class="n">through</span><span class="o">=</span><span class="s">&#39;Course&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">u&quot;</span><span class="si">%s</span><span class="s"> </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">last_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Course</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">name</span>      <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</span><span class='line'>  <span class="n">professor</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Professor</span><span class="p">)</span>
</span><span class='line'>  <span class="n">student</span>   <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Student</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class='line'>      <span class="n">unique_together</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;professor&#39;</span><span class="p">,</span> <span class="s">&#39;student&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__unicode__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">u&quot;</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, we are going to use South to migrate our schemas. Run <code>python manage.py schemamigration studies --auto</code>.</p>

<p>South create a migration script under studies/migrations named <code>0002_auto__add_course__add_unique_course_professor_student.py</code></p>

<p>Here&rsquo;s it:</p>

<figure class='code'><figcaption><span>0002_auto__add_course__add_unique_course_professor_student.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">south.db</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">south.v2</span> <span class="kn">import</span> <span class="n">SchemaMigration</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Migration</span><span class="p">(</span><span class="n">SchemaMigration</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">forwards</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">orm</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Adding model &#39;Course&#39;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_table</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">,</span> <span class="p">(</span>
</span><span class='line'>            <span class="p">(</span><span class="s">u&#39;id&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">)(</span><span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;name&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">)(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;professor&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">)(</span><span class="n">to</span><span class="o">=</span><span class="n">orm</span><span class="p">[</span><span class="s">&#39;studies.Professor&#39;</span><span class="p">])),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;student&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">)(</span><span class="n">to</span><span class="o">=</span><span class="n">orm</span><span class="p">[</span><span class="s">&#39;studies.Student&#39;</span><span class="p">])),</span>
</span><span class='line'>        <span class="p">))</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">send_create_signal</span><span class="p">(</span><span class="s">u&#39;studies&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;Course&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Adding unique constraint on &#39;Course&#39;, fields [&#39;professor&#39;, &#39;student&#39;]</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_unique</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;professor_id&#39;</span><span class="p">,</span> <span class="s">&#39;student_id&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Removing M2M table for field professors on &#39;Student&#39;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">delete_table</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">shorten_name</span><span class="p">(</span><span class="s">u&#39;studies_student_professors&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">backwards</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">orm</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Removing unique constraint on &#39;Course&#39;, fields [&#39;professor&#39;, &#39;student&#39;]</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">delete_unique</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;professor_id&#39;</span><span class="p">,</span> <span class="s">&#39;student_id&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Deleting model &#39;Course&#39;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">delete_table</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Adding M2M table for field professors on &#39;Student&#39;</span>
</span><span class='line'>        <span class="n">m2m_table_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">shorten_name</span><span class="p">(</span><span class="s">u&#39;studies_student_professors&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_table</span><span class="p">(</span><span class="n">m2m_table_name</span><span class="p">,</span> <span class="p">(</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;id&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">AutoField</span><span class="p">(</span><span class="n">verbose_name</span><span class="o">=</span><span class="s">&#39;ID&#39;</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">auto_created</span><span class="o">=</span><span class="bp">True</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;student&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">orm</span><span class="p">[</span><span class="s">u&#39;studies.student&#39;</span><span class="p">],</span> <span class="n">null</span><span class="o">=</span><span class="bp">False</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;professor&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">orm</span><span class="p">[</span><span class="s">u&#39;studies.professor&#39;</span><span class="p">],</span> <span class="n">null</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>
</span><span class='line'>        <span class="p">))</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_unique</span><span class="p">(</span><span class="n">m2m_table_name</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;student_id&#39;</span><span class="p">,</span> <span class="s">&#39;professor_id&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">models</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">u&#39;studies.course&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Meta&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;unique_together&#39;</span><span class="p">:</span> <span class="s">&quot;([&#39;professor&#39;, &#39;student&#39;],)&quot;</span><span class="p">,</span> <span class="s">&#39;object_name&#39;</span><span class="p">:</span> <span class="s">&#39;Course&#39;</span><span class="p">},</span>
</span><span class='line'>            <span class="s">u&#39;id&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;primary_key&#39;</span><span class="p">:</span> <span class="s">&#39;True&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;professor&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;to&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Professor&#39;]&quot;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;student&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;to&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Student&#39;]&quot;</span><span class="p">})</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">u&#39;studies.professor&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Meta&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;object_name&#39;</span><span class="p">:</span> <span class="s">&#39;Professor&#39;</span><span class="p">},</span>
</span><span class='line'>            <span class="s">&#39;first_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">u&#39;id&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;primary_key&#39;</span><span class="p">:</span> <span class="s">&#39;True&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;last_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">})</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">u&#39;studies.student&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Meta&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;object_name&#39;</span><span class="p">:</span> <span class="s">&#39;Student&#39;</span><span class="p">},</span>
</span><span class='line'>            <span class="s">&#39;first_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">u&#39;id&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;primary_key&#39;</span><span class="p">:</span> <span class="s">&#39;True&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;last_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;professors&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ManyToManyField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;to&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Professor&#39;]&quot;</span><span class="p">,</span> <span class="s">&#39;through&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Course&#39;]&quot;</span><span class="p">,</span> <span class="s">&#39;symmetrical&#39;</span><span class="p">:</span> <span class="s">&#39;False&#39;</span><span class="p">})</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">complete_apps</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;studies&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s two main methods:</p>

<ul>
<li>forwards: used to apply new changes</li>
<li>backwards: used to revert new changes</li>
</ul>


<p>We are going now to add custom code to import existing relation into the new schema Course.
For the attribute name in Course I&rsquo;m going to insert mathematics, in some case we need some details to know what we are going to put in the added column.</p>

<p>We insert our custom code in the forwards method, it load data from old schema generated by Django and push it into the new schema Course.</p>

<figure class='code'><figcaption><span>0002_auto__add_course__add_unique_course_professor_student.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">south.utils</span> <span class="kn">import</span> <span class="n">datetime_utils</span> <span class="k">as</span> <span class="n">datetime</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">south.db</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">south.v2</span> <span class="kn">import</span> <span class="n">SchemaMigration</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">studies.models</span> <span class="kn">import</span> <span class="n">Student</span><span class="p">,</span> <span class="n">Professor</span><span class="p">,</span> <span class="n">Course</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">OldJoinMock</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Meta</span><span class="p">:</span>
</span><span class='line'>        <span class="n">db_table</span> <span class="o">=</span> <span class="s">u&#39;studies_student_professors&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">student</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Student</span><span class="p">)</span>
</span><span class='line'>    <span class="n">professor</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">Professor</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Migration</span><span class="p">(</span><span class="n">SchemaMigration</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">forwards</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">orm</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Adding model &#39;Course&#39;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_table</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">,</span> <span class="p">(</span>
</span><span class='line'>            <span class="p">(</span><span class="s">u&#39;id&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">)(</span><span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;name&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">)(</span><span class="n">max_length</span><span class="o">=</span><span class="mi">50</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;professor&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">)(</span><span class="n">to</span><span class="o">=</span><span class="n">orm</span><span class="p">[</span><span class="s">&#39;studies.Professor&#39;</span><span class="p">])),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;student&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">gf</span><span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">)(</span><span class="n">to</span><span class="o">=</span><span class="n">orm</span><span class="p">[</span><span class="s">&#39;studies.Student&#39;</span><span class="p">])),</span>
</span><span class='line'>        <span class="p">))</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">send_create_signal</span><span class="p">(</span><span class="s">u&#39;studies&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;Course&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Adding unique constraint on &#39;Course&#39;, fields [&#39;professor&#39;, &#39;student&#39;]</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_unique</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;professor_id&#39;</span><span class="p">,</span> <span class="s">&#39;student_id&#39;</span><span class="p">])</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c">#Our custom code here, before delete_table and after create Course table</span>
</span><span class='line'>        <span class="n">Course</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">bulk_create</span><span class="p">([</span>
</span><span class='line'>            <span class="n">Course</span><span class="p">(</span>
</span><span class='line'>                <span class="n">student</span><span class="o">=</span><span class="n">data</span><span class="o">.</span><span class="n">student</span><span class="p">,</span>
</span><span class='line'>                <span class="n">professor</span><span class="o">=</span><span class="n">data</span><span class="o">.</span><span class="n">professor</span><span class="p">,</span>
</span><span class='line'>                <span class="n">name</span><span class="o">=</span><span class="s">&#39;mathematics&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">OldJoinMock</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
</span><span class='line'>        <span class="p">])</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Removing M2M table for field professors on &#39;Student&#39;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">delete_table</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">shorten_name</span><span class="p">(</span><span class="s">u&#39;studies_student_professors&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">backwards</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">orm</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Removing unique constraint on &#39;Course&#39;, fields [&#39;professor&#39;, &#39;student&#39;]</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">delete_unique</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;professor_id&#39;</span><span class="p">,</span> <span class="s">&#39;student_id&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Deleting model &#39;Course&#39;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">delete_table</span><span class="p">(</span><span class="s">u&#39;studies_course&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Adding M2M table for field professors on &#39;Student&#39;</span>
</span><span class='line'>        <span class="n">m2m_table_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">shorten_name</span><span class="p">(</span><span class="s">u&#39;studies_student_professors&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_table</span><span class="p">(</span><span class="n">m2m_table_name</span><span class="p">,</span> <span class="p">(</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;id&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">AutoField</span><span class="p">(</span><span class="n">verbose_name</span><span class="o">=</span><span class="s">&#39;ID&#39;</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">auto_created</span><span class="o">=</span><span class="bp">True</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;student&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">orm</span><span class="p">[</span><span class="s">u&#39;studies.student&#39;</span><span class="p">],</span> <span class="n">null</span><span class="o">=</span><span class="bp">False</span><span class="p">)),</span>
</span><span class='line'>            <span class="p">(</span><span class="s">&#39;professor&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="n">orm</span><span class="p">[</span><span class="s">u&#39;studies.professor&#39;</span><span class="p">],</span> <span class="n">null</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>
</span><span class='line'>        <span class="p">))</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="n">create_unique</span><span class="p">(</span><span class="n">m2m_table_name</span><span class="p">,</span> <span class="p">[</span><span class="s">&#39;student_id&#39;</span><span class="p">,</span> <span class="s">&#39;professor_id&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">models</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">u&#39;studies.course&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Meta&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;unique_together&#39;</span><span class="p">:</span> <span class="s">&quot;([&#39;professor&#39;, &#39;student&#39;],)&quot;</span><span class="p">,</span> <span class="s">&#39;object_name&#39;</span><span class="p">:</span> <span class="s">&#39;Course&#39;</span><span class="p">},</span>
</span><span class='line'>            <span class="s">u&#39;id&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;primary_key&#39;</span><span class="p">:</span> <span class="s">&#39;True&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;professor&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;to&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Professor&#39;]&quot;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;student&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ForeignKey&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;to&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Student&#39;]&quot;</span><span class="p">})</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">u&#39;studies.professor&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Meta&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;object_name&#39;</span><span class="p">:</span> <span class="s">&#39;Professor&#39;</span><span class="p">},</span>
</span><span class='line'>            <span class="s">&#39;first_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">u&#39;id&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;primary_key&#39;</span><span class="p">:</span> <span class="s">&#39;True&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;last_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">})</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s">u&#39;studies.student&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;Meta&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;object_name&#39;</span><span class="p">:</span> <span class="s">&#39;Student&#39;</span><span class="p">},</span>
</span><span class='line'>            <span class="s">&#39;first_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">u&#39;id&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.AutoField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;primary_key&#39;</span><span class="p">:</span> <span class="s">&#39;True&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;last_name&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.CharField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;max_length&#39;</span><span class="p">:</span> <span class="s">&#39;50&#39;</span><span class="p">}),</span>
</span><span class='line'>            <span class="s">&#39;professors&#39;</span><span class="p">:</span> <span class="p">(</span><span class="s">&#39;django.db.models.fields.related.ManyToManyField&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="p">{</span><span class="s">&#39;to&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Professor&#39;]&quot;</span><span class="p">,</span> <span class="s">&#39;through&#39;</span><span class="p">:</span> <span class="s">u&quot;orm[&#39;studies.Course&#39;]&quot;</span><span class="p">,</span> <span class="s">&#39;symmetrical&#39;</span><span class="p">:</span> <span class="s">&#39;False&#39;</span><span class="p">})</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">complete_apps</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;studies&#39;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run migration: <code>python manage.py migrate</code></p>

<p>Let&rsquo;s check our data now:</p>

<figure class='code'><figcaption><span>python interactive shell </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">studies.models</span> <span class="kn">import</span> <span class="n">Professor</span><span class="p">,</span> <span class="n">Student</span>
</span><span class='line'><span class="n">student1</span> <span class="o">=</span> <span class="n">Student</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Justin&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">all</span><span class="p">()</span> <span class="c">#should be professor1 and professor2</span>
</span><span class='line'><span class="c">#Out: [&lt;Professor: Joshua Smith&gt;, &lt;Professor: Ethan Brown&gt;]</span>
</span><span class='line'><span class="n">student2</span> <span class="o">=</span> <span class="n">Student</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">first_name</span><span class="o">=</span><span class="s">&#39;Tom&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">student2</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">all</span><span class="p">()</span> <span class="c">#should be professor2</span>
</span><span class='line'><span class="c">#Out: [&lt;Professor: Ethan Brown&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s it, our relation are imported to our Course model easily. You can add also a custom code in backwards method needed for revert.</p>

<p>Just don&rsquo;t forget to update your code because methods add and remove are not valid now:</p>

<ul>
<li>Add:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">professor1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>
become</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Course</span><span class="p">(</span><span class="n">student</span><span class="o">=</span><span class="n">student1</span><span class="p">,</span> <span class="n">professor</span><span class="o">=</span><span class="n">professor1</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">&#39;Django&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Remove:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">student1</span><span class="o">.</span><span class="n">professors</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">professor1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>become</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Course</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">student</span><span class="o">=</span><span class="n">student1</span><span class="p">,</span> <span class="n">professor</span><span class="o">=</span><span class="n">professor1</span><span class="p">)</span><span class="o">.</span><span class="n">delete</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Last thing, use South in your Django projects, <b>you must use it</b> from project start else from now!</p>

<p>Good luck with your migrations !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple AngularJS for Stackoverflow API]]></title>
    <link href="http://MounirMesselmeni.github.io/2013/07/01/simple-angularjs-for-stackoverflow-api/"/>
    <updated>2013-07-01T00:30:00+01:00</updated>
    <id>http://MounirMesselmeni.github.io/2013/07/01/simple-angularjs-for-stackoverflow-api</id>
    <content type="html"><![CDATA[<h2>Angular JS</h2>

<p><a href="http://www.angularjs.org">AngularJS</a> is a javascript and client side Framework. It expose a toolset based on extending the HTML vocabulary for your application.</p>

<p>There&rsquo;s many other Frameworks like <a href="http://backbonejs.org">Backbone.js</a>, <a href="http://emberjs.com">Ember.js</a>, <a href="http://knockoutjs.com">Knockout</a> &hellip;</p>

<h2>Main concepts</h2>

<ul>
<li>Model: Application data</li>
<li>View: What users sees</li>
<li>Controller: Application behavior</li>
<li>Scope: Glue between application data and behavior</li>
<li><code>$</code>: Angular namespace</li>
<li>Module: configure the injector</li>
<li>Injector: assembles the application</li>
</ul>


<!-- more -->


<p>AngularJS offers two-way data binding without funcing up the model. You don&rsquo;t need to write a model like other javascript librairies.</p>

<p><img class="center" src="http://docs.angularjs.org/img/One_Way_Data_Binding.png">
<img class="center" src="http://i.stack.imgur.com/KzDS3.png"></p>

<p>Data-binding is an automatic way of updating the view whenever the model changes, as well as updating the model whenever the view changes. This is awesome because it eliminates DOM manipulation from the list of things you have to worry about. Source <a href="http://docs.angularjs.org/api">AngularJS doc</a></p>

<p>Controllers are the behavior behind the DOM elements. AngularJS lets you express the behavior in a clean readable form without the usual boilerplate of updating the DOM, registering callbacks or watching model changes.</p>

<p>A model for AngularJS is just a simple Javascript Object (JSON).
This means, if we load a user from an API call, we can use it in html like he&rsquo;s structured from server. Magic!</p>

<h2>How it works</h2>

<ul>
<li>Browser loads the HTML and then the AngularJS script.</li>
<li>AngularJS wait for <code>DOMContentLoaded</code> event and looks for the <code>ng-app</code> directive.</li>
<li>The module specified in <code>ng-app</code> is used to configure the injector.</li>
<li>The injector is used to create the <code>$compile</code> service and <code>$rootScope</code>.</li>
<li><code>$compile</code> compiles the DOM and links it with <code>$rootScope</code>.</li>
</ul>


<p><img class="center" src="http://docs.angularjs.org/img/guide/concepts-startup.png"></p>

<h2>Our first application with AngularJS</h2>

<p>The goal of this section&rsquo;s to use AngularJS in a simple app, we are going to use <a href="http://api.stackexchange.com">Stack Exchange API V2.0 </a> just for demonstration purpose. I choose <a href="http://www.stackoverflow.com">Stackoverflow</a> simply because I like it and it&rsquo;s helpful for all of us.</p>

<h2>Module</h2>

<figure class='code'><figcaption><span>controller.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>   <span class="kd">var</span> <span class="nx">soApp</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;soApp&#39;</span><span class="p">,</span> <span class="p">[]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>To create an AngularJS module, we just provide our module a name, in our case it&rsquo;s <code>soApp</code>.
We use here an empty array, this array provides modules dependencies, all modules uses by our modules. We don&rsquo;t need this time.</p>

<h2>Controller</h2>

<figure class='code'><figcaption><span>controller.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">soApp</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainController&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">MainController</span><span class="p">(</span><span class="nx">$scope</span><span class="p">){</span>
</span><span class='line'>      <span class="c1">//Controller behavior here</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>To be continued</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Sublime Text 3 on Fedora 19]]></title>
    <link href="http://MounirMesselmeni.github.io/2013/06/30/installing-sublime-text-3-on-fedora-19/"/>
    <updated>2013-06-30T16:03:00+01:00</updated>
    <id>http://MounirMesselmeni.github.io/2013/06/30/installing-sublime-text-3-on-fedora-19</id>
    <content type="html"><![CDATA[<p>To install sublime text on Fedora 19 (16, 17 and 18), download this gist</p>

<p><a href="http://www.sublimetext.com/blog/articles/sublime-text-3-public-beta">Sublime Text 3</a> Beta is now open to non-registered users. <a href="http://www.sublimetext.com/3">Download</a> the tarball (32 or 64 bits).</p>

<ul>
<li>Go to your Downloads folder: <code>cd Downloads</code></li>
<li>Download or copy this GIST in your Downloads folder.</li>
<li>Execute this script by <code>chmod +x sublime3_fedora19.sh</code> and then <code>sudo ./sublime3_fedora19.sh sublime_text_3_build_3047_x64.tar.bz2</code>, <code>sublime_text_3_build_3047_x64.tar.bz2</code> is the downloaded tarball, change it if you download other version.</li>
<li>Now your sublime text is installed and integrated to your gnome desktop.</li>
</ul>


<!-- more -->




<div><script src='https://gist.github.com/5895264.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<h2>Sublime Text 3 Package Control</h2>

<p>To enable Package control in Sublime Text 3:</p>

<p>The simplest method of installation is through the Sublime Text console. The console is accessed via the <code>ctrl+</code> shortcut or the View > Show Console menu. Once open, paste the following Python code for your version of Sublime Text into the console.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>   <span class="kn">import</span> <span class="nn">urllib.request</span><span class="o">,</span><span class="nn">os</span><span class="p">;</span> <span class="n">pf</span> <span class="o">=</span> <span class="s">&#39;Package Control.sublime-package&#39;</span><span class="p">;</span> <span class="n">ipp</span> <span class="o">=</span> <span class="n">sublime</span><span class="o">.</span><span class="n">installed_packages_path</span><span class="p">();</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">install_opener</span><span class="p">(</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">build_opener</span><span class="p">(</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">ProxyHandler</span><span class="p">())</span> <span class="p">);</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">ipp</span><span class="p">,</span> <span class="n">pf</span><span class="p">),</span> <span class="s">&#39;wb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span> <span class="s">&#39;http://sublime.wbond.net/&#39;</span> <span class="o">+</span> <span class="n">pf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span><span class="s">&#39;%20&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://sublime.wbond.net/installation#st3">Source</a></p>

<p><a href="https://sublime.wbond.net/browse">Here&rsquo;s</a> the list plugins with compatibility indicator.</p>

<h2>Sublime Text 3 Useful Shortcuts</h2>

<div><script src='https://gist.github.com/5895595.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reading CSV File With Javascript and HTML5 File API]]></title>
    <link href="http://MounirMesselmeni.github.io/2012/11/20/javascript-csv/"/>
    <updated>2012-11-20T20:43:00+01:00</updated>
    <id>http://MounirMesselmeni.github.io/2012/11/20/javascript-csv</id>
    <content type="html"><![CDATA[<p>In a specific project, the client want to read a CSV file, process and show data into an <a href="http://openlayers.org/">OpenLayers</a> Map.</p>

<p>So it come in my mind to write a simple html/javascript application, without any backend server.</p>

<h2>How to read a file via browser ?</h2>

<p>The unique constraint was how can I read the CSV file in browser.</p>

<p>HTML5 finally provides a standard way to interact with local files, via the <a href="http://www.w3.org/TR/file-upload/">File API</a></p>

<p>We are going to use <a href="http://dev.w3.org/2006/webapi/FileAPI/#dfn-filereader">FileReader</a></p>

<!-- more -->


<p>First, let’s check if the browser support FileReader API</p>

<figure class='code'><figcaption><span>read-csv.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>   <span class="kd">function</span> <span class="nx">handleFiles</span><span class="p">(</span><span class="nx">files</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Check for the various File API support.</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">FileReader</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// FileReader are supported.</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;FileReader are not supported in this browser.&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>How to read a file via browser ?</h2>

<p>To select a file we’re going to use a simple html <code>&lt;input type="file"&gt;</code></p>

<p>We just call handleFile to make JavaScript returns the list of selected File objects but we are going to use only one.</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;static/js/read-csv.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;file&quot;</span> <span class="na">id=</span><span class="s">&quot;csvFileInput&quot;</span> <span class="na">onchange=</span><span class="s">&quot;handleFiles(this.files)&quot;</span>
</span><span class='line'>            <span class="na">accept=</span><span class="s">&quot;.csv&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reading the File</h2>

<p>After we’ve obtained a File reference, we instantiate a FileReader object to read its contents into memory. When the load finishes, the reader’s onload event is fired and its result attribute can be used to access the file data.</p>

<p>FileReader includes four options for reading a file, asynchronously:
&ndash; <code>FileReader.readAsBinaryString(Blob|File)</code> – The result property will contain the file/blob’s data as a binary string. Every byte is represented by an integer in the range [0..255].
&ndash; <code>FileReader.readAsText(Blob|File, opt_encoding)</code> – The result property will contain the file/blob’s data as a text string. By default the string is decoded as ‘UTF-8’. Use the optional encoding parameter can specify a different format.
&ndash; <code>FileReader.readAsDataURL(Blob|File)</code> – The result property will contain the file/blob’s data encoded as a data URL.
&ndash; <code>FileReader.readAsArrayBuffer(Blob|File)</code> – The result property will contain the file/blob’s data as an ArrayBuffer object.</p>

<p>For our example, we want to read a CSV file, so we can read it as text. And perfom data processing after in <code>processData(csv)</code> function.</p>

<figure class='code'><figcaption><span>read-csv.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>   <span class="kd">function</span> <span class="nx">handleFiles</span><span class="p">(</span><span class="nx">files</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Check for the various File API support.</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">FileReader</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// FileReader are supported.</span>
</span><span class='line'>        <span class="nx">getAsText</span><span class="p">(</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;FileReader are not supported in this browser.&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">getAsText</span><span class="p">(</span><span class="nx">fileToRead</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FileReader</span><span class="p">();</span>
</span><span class='line'>    <span class="c1">// Read file into memory as UTF-8      </span>
</span><span class='line'>    <span class="nx">reader</span><span class="p">.</span><span class="nx">readAsText</span><span class="p">(</span><span class="nx">fileToRead</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// Handle errors load</span>
</span><span class='line'>    <span class="nx">reader</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="nx">loadHandler</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">reader</span><span class="p">.</span><span class="nx">onerror</span> <span class="o">=</span> <span class="nx">errorHandler</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">loadHandler</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">csv</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">processData</span><span class="p">(</span><span class="nx">csv</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">processData</span><span class="p">(</span><span class="nx">csv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">allTextLines</span> <span class="o">=</span> <span class="nx">csv</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\r\n|\n/</span><span class="p">);</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">lines</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">allTextLines</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">allTextLines</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">);</span>
</span><span class='line'>              <span class="kd">var</span> <span class="nx">tarr</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>              <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">j</span><span class="o">&lt;</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">tarr</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="nx">lines</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">tarr</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">lines</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">errorHandler</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">evt</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">name</span> <span class="o">==</span> <span class="s2">&quot;NotReadableError&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Canno&#39;t read file !&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>That’s it.</p>

<h3>Resources</h3>

<ul>
<li><a href="https://github.com/MounirMesselmeni/html-fileapi">Source code</a> for this article.</li>
</ul>

]]></content>
  </entry>
  
</feed>
